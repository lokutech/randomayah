{"version":3,"sources":["twitter.svg","App.js","index.js"],"names":["module","exports","App","state","ayah","author","color","loading","ayahNumber","ayahName","surah","handleClick","apiCall","componentDidMount","setState","fetch","Math","floor","lastAyah","random","then","response","json","reverseForKFGQPC","convertToInd","data","numberInSurah","text","name","randomcolor","document","body","style","backgroundColor","this","React","Component","Quote","props","display","console","log","id","onClick","href","src","twitter","alt","num","dict","0","1","2","3","4","5","6","7","8","9","String","split","map","a","join","length","reverse","array","colors","10","11","12","13","14","15","16","17","18","19","20","21","diff","Object","keys","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4d2b5970.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.d45f5c63.svg\";","import React from 'react'\nimport './App.css'\nimport twitter from './twitter.svg'\n\nclass App extends React.Component {\n  state = {\n    ayah: '',\n    author: '',\n    color: '',\n    loading: false,\n    ayahNumber: 0,\n    ayahName: '',\n    surah: ''\n  }\n\n  handleClick = () => {\n    this.apiCall()\n  }\n\n  componentDidMount = () => {\n    this.apiCall()\n  }\n\n  apiCall = () => {\n    this.setState({ loading: true })\n    fetch(`http://api.alquran.cloud/v1/ayah/${randomAyah()}`)\n      .then(response => response.json())\n      .then(ayah => {\n        this.setState({\n          loading: false,\n          ayahNumber: reverseForKFGQPC(convertToInd(ayah.data.numberInSurah)),\n          ayah: ayah.data.text,\n          author: ayah.data.surah.name,\n          color: randomcolor()\n        })\n      })\n  }\n\n  render() {\n    document.body.style.backgroundColor = this.state.color\n    let { ayah, author, color, ayahNumber, loading } = this.state\n    return (\n      <div>\n        <Quote\n          ayah={ayah}\n          author={author}\n          color={color}\n          handleClick={this.handleClick}\n          ayahNumber={ayahNumber}\n          loading={loading}\n        />\n      </div>\n    )\n  }\n}\n\nconst Quote = props => {\n  let style = {\n    color: props.color,\n    display: 'inline'\n  }\n  if (props.loading) style.display = 'none'\n  console.log(props.ayahNumber, 'ayah number')\n\n  return (\n    <div id='quote-box'>\n      {props.loading && <p id='loading'>...جار التحميل</p>}\n      <p\n        style={{ color: props.color, display: props.loading && 'none' }}\n        id='text'\n      >\n        {props.ayah} {props.ayahNumber}\n      </p>\n      <p\n        style={{ color: props.color, display: props.loading && 'none' }}\n        id='author'\n      >\n        {props.author}\n      </p>\n      <button\n        style={{ backgroundColor: props.color }}\n        onClick={props.handleClick}\n        id='new-quote'\n      >\n        آية جديدة\n      </button>\n      <div id='twitterbox'>\n        <a href={`https://twitter.com/intent/tweet?hashtags=Quran&text=${props.ayah}`}>\n          <img src={twitter} style={{ backgroundColor: props.color }} alt={'tweet bird'} />\n        </a>\n      </div>\n    </div>\n  )\n}\n\nfunction convertToInd(num) {\n  const dict = {\n    0: '٠',\n    1: '١',\n    2: '٢',\n    3: '٣',\n    4: '٤',\n    5: '٥',\n    6: '٦',\n    7: '٧',\n    8: '٨',\n    9: '٩'\n  }\n  let x = String(num)\n    .split('')\n    .map(a => dict[a])\n    .join('')\n  return x\n}\n\nfunction randomAyah() {\n  const firstAyah = 1\n  const lastAyah = 6236\n  const diff = lastAyah - firstAyah + 1 // added 1 because the range doesn't include the last Ayah\n  return Math.floor(Math.random() * diff + firstAyah)\n}\n\nfunction reverseForKFGQPC(num) {\n  console.log(num, 'before change')\n  if (num.length < 3) {\n    return String(num)\n      .split('')\n      .reverse()\n      .join('')\n  } else {\n    let array = String(num).split('')\n    console.log(array)\n    return String(num)\n      .split('')\n      .reverse()\n      .join('')\n\n    // let newnum = String(num).split('')[0]+ String(num).split('')[1]\n    // return newnum.join('')\n  }\n}\n\nfunction randomcolor() {\n  const colors = {\n    1: '#2E3F96',\n    2: '#8E0E21',\n    3: '#D8A05B',\n    4: '#F254B0',\n    5: '#E06469',\n    6: '#3B90AF',\n    7: '#310584',\n    8: '#52AA05',\n    9: '#4985D8',\n    10: '#B5402F',\n    11: '#C86ED8',\n    12: '#30A7BA',\n    13: '#6849B2',\n    14: '#6A71F2',\n    15: '#E28C1B',\n    16: '#EFAB62',\n    17: '#29A2B2',\n    18: '#39BF94',\n    19: '#FC6CB2',\n    20: '#C13A50',\n    21: '#342224'\n  }\n  const firstAyah = 1\n  const diff = Object.keys(colors).length\n  let selectedColor = Math.floor(Math.random() * diff + firstAyah)\n  return colors[selectedColor]\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}